*, *::before, *::after {
    box-sizing: border-box;
}
.grid {
    font-size: 0px;
    /*keeps spaces between the grid elements to size 0 */
    text-align: justify;
    position: relative;
}
/**
 * needed to make the grid elements justify themselves
 */

.grid::after {
    content: "";
    display: inline-block;
    width: 100%;
}
.grid > * {
    display: inline-block;
    width: 100%;
    /* Remember, the reason this is 100% is cuz it's built mobile first */
    text-align: left;
    font-size: medium;
    /* resets the font size since it was set to 0px inside the grid */
    vertical-align: top;
}
.grid-5-options {
    text-align: justify;
    font-size: 0px;
}
.grid-5-options > * {
    width: 20%;
    text-align: left;
    font-size: medium;
}
.grid-5-options::after {
    content: "";
    display: inline-block;
    width: 100%;
}
/*
    add a media query to handle screensizes, note the semantic name I chose to give this CSS class:

    .grid- "a grid class"
    -2- "2 columns"
    -480 "when the screen is atleast 480px wide"
*/

@media (min-width: 480px) {
    .grid-2-480 > * {
        width: 48%;
    }
}
@media (min-width: 800px) {
    .grid-3-800 > * {
        width: 31%;
    }
}
/* less re-usable styles are put into another CSS class so that I can reuse .grid on other parts of a site */

.salmon-grid > * {
    background-color: #FFFFFF;
    /*padding: 2em;*/
    color: white;
    margin-bottom: 15em;
    border: 2px #5CA4D7 solid;
}
.squarify > *::before {
    content: "";
    display: block;
    padding-top: 100%;
}
.centerify {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}
.products {
    position: relative;
}
.products .centerify {
	width: 80%;
}
.options {
    display: block;
    position: relative;
    overflow: auto;
    border-top: 2px #5CA4D7 solid;
}
.options > * {
    display: block;
    float: left;
    width: 20%;
    border-right: 2px #5CA4D7 solid;
    background-color: white;
    position: relative;
}
.options > * > .fa {
	text-align: center;
	font-size: 1.5em;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%) translateZ(0);
	z-index: 1;
}
.options > *::after {
    content: "";
    display: block;
    padding-top: 100%;
}

.cart {
	border-right-color: transparent;
}

/* checkbox */

input[type="checkbox"] {
    position: absolute;
    top: -2px;
    right: -2px;
    width: 3em;
    height: 3em;
    margin: 0px;
}
input[type="checkbox"]:hover {
    cursor: pointer;
}
input[type="checkbox"]::after {
    content: "\f079";
    background-color: #FFFFFF;
    border: 2px #5CA4D7 solid;
    display: block;
    position: absolute;
    top: 0;
    right: 0;
    height: 100%;
    width: 100%;
}
input[type="checkbox"]:hover::after {
    background-color: #5CA4D7;
}
input[type="checkbox"]:checked::after {
    background-color: #2a7ad7;
    transition: transform .5s ease;
}
input[type="checkbox"]:checked, img:nth-of-type(1) {
    transform: rotateY(180deg);
}
input[type="checkbox"]:checked + div > img:nth-of-type(2) {
    transform: rotateY(0deg);
}
/*.picture {
	background-image: url(http://tympanus.net/Blueprints/ProductGridLayout/images/1_front.png);
}
*/

/* images */

img {
    transition: transform .7s ease;
    display: inline-block;
    max-width: 100%;
}
img:nth-of-type(1) {
    backface-visibility: hidden;
    /* this is to hide the image when rotated 180deg */
    transform: rotateY(0deg) translateZ(0);
    position: absolute;
}
img:nth-of-type(2) {
    backface-visibility: hidden;
    transform: rotateY(180deg) translateZ(0);
}
